#!/bin/bash

function create {
	# Name of new release branch to be created
	RELEASE_BRANCH=$2

	# Path to text file which contains branches to be merged
	RELEASE_FILE=$1

	if [ -z "$RELEASE_BRANCH" ] || [ -z "$RELEASE_FILE" ]
	then
	    echo "Usage `basename $0` filename branchname" >&2
	    exit 1;
	fi

	echo "Creating $RELEASE_BRANCH..."

	git checkout -b $RELEASE_BRANCH master

	cp $RELEASE_FILE $RELEASE_BRANCH

	git add $RELEASE_BRANCH

	git commit -m "Adding Release Branch Definition file"

	for BRANCH in `cat $RELEASE_FILE`
	do
	    git merge --no-ff --no-edit $BRANCH
	done	
}

function dump {
	RELEASE_BRANCH=$1
	echo "Dumping $RELEASE_BRANCH..."
	git checkout master
	git branch -D $RELEASE_BRANCH
}

## Beta Functions

function add {
	echo "Add Feature Branch into the release file."
	FEAUTURE_BRANCH=$1
	if [ -z "$FEAUTURE_BRANCH" ]
	then
		echo "Enter Feature Branch: "
		read FEAUTURE_BRANCH
	fi
	echo $FEAUTURE_BRANCH
	BRANCHES=`git branch -a | grep $FEAUTURE_BRANCH | wc -l`
	echo "Branches Found: $BRANCHES"
	if [ "$BRANCHES" -gt "1" ]
		then
		echo "More than one branch found... (You will need to pick one)"
		echo `git branch -a | grep $FEAUTURE_BRANCH`
		exit 1;
	fi
	addbranchtorelease $FEAUTURE_BRANCH
}

function findfeature {
	FEAUTURE_BRANCH=$1
	if [ -z "$FEAUTURE_BRANCH" ]
	then
		echo "Enter Feature Branch: "
		read FEAUTURE_BRANCH
	fi
	BRANCHES=`git branch -a | grep $FEAUTURE_BRANCH`
	echo "Branches Found: $BRANCHES"
}

function addbranchtorelease {
	FEAUTURE_BRANCH=$1
	CURRENT_RELEASE=current
	if [ -z "CURRENT_RELEASE" ]
		then
		echo "No Release is Initialized"
		exit 1;
	fi
	BRANCHES=`git config --get releases.$CURRENT_RELEASE`
	git config --add releases.$CURRENT_RELEASE "$BRANCHES $FEAUTURE_BRANCH" 

}

function current {
	# "Used to list the release info"
	echo `git config --get releases.current`
}

function init {
	echo "Will be used to create the release file, that will hold the branch list"
	git config --local --add releases.current $1
	git config --local --add releases.$1 
	current
}

COMMAND=$1

if [ -z "$COMMAND" ]
	then 
	echo " *** HELP ****************** "
	echo " "
	echo " Release file sits on root of repo, and contains list of branches, one branch per line."
	echo " "
	echo "  Valid Commands are:"
	echo "    dump [release branch] - Delete Release Branch (No undo here folks)"
	echo "    create [release file] [release branch] - Creates New Branch, Reads and Merges Feature Branches, from Release File"
	echo " "
	echo "  BETA Commands"
	echo "    init [release] - Creates new release in local config"
	echo "    add [feature branch] - Adds Feature Branch to release config"
	echo "    current - returns current release"
	echo " ************************** "
	echo " "
fi

$COMMAND $2 $3